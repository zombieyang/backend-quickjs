name: build quickjs backend

on: 
  push:
  workflow_dispatch:
    inputs:
      tag_date:
        description: 'tag date'     
        required: true
jobs:
  build_window_dll_md_dll:
    name: Windows MD_dll
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3
    - name: Insatll MSVC
      uses: microsoft/setup-msbuild@v1.1
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: 'cmake make mingw-w64-x86_64-gcc mingw-w64-x86_64-dlfcn'
    - shell: msys2 {0}
      run: |
        sh ./make_win.sh
    - name: Build
      run: |
        cd win
        .\make_win64md_dll.bat
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Merge Libs
      run: |
        cd win
        LIB.EXE /OUT:quickjs.dll.lib ..\build\libquickjs.dll.a build\Release\v8qjs.lib
    - name: Prepare
      shell: msys2 {0}
      run: |
        mkdir -p qjs/quickjs/Lib/Win64DLL/
        cp win/quickjs.dll.lib qjs/quickjs/Lib/Win64DLL/
        cp win/build/Release/v8qjs.dll qjs/quickjs/Lib/Win64DLL/
        cp build/msys-quickjs.dll qjs/quickjs/Lib/Win64DLL/
        cp build/libquickjs.dll.a qjs/quickjs/Lib/Win64DLL/
        cp /mingw64/bin/libgcc_s_seh-1.dll qjs/quickjs/Lib/Win64DLL/
        cp /mingw64/bin/libwinpthread-1.dll qjs/quickjs/Lib/Win64DLL/
    - uses: actions/upload-artifact@v3
      with:
        name: qjs_v8_bin
        path: qjs/**/*
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.tag_date != '' }}
    needs: [build_window_dll_md_dll]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: qjs_v8_bin
          path: qjs_v8_bin/
          
      - name: Create Release Asset
        run: |
          cd qjs_v8_bin/ && tar cvfz ../qjs_v8_bin.tgz quickjs && cd -
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: QJS_${{ github.event.inputs.tag_date }}
          release_name: QJS_${{ github.event.inputs.tag_date }}
          draft: false
          prerelease: false

      - name: Upload V8
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./qjs_v8_bin.tgz
          asset_name: qjs_v8_bin.tgz
          asset_content_type: application/tgz
